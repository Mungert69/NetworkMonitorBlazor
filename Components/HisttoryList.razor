@using NetworkMonitorBlazor.Models
@using System.Globalization

<ul class="history-list">
    @foreach (var history in Histories)
    {
        <li class="history-item @(history.SessionId == CurrentSessionId ? "active" : "")">
            <div class="history-content" @onclick="() => OnSelectSession.InvokeAsync(history.SessionId)">
                <div class="history-name">@history.Name.Trim()</div> @* Trim() removes the \n *@
                <div class="history-details">
                    <span class="history-type">@history.LLMType</span>
                    <span class="history-time">
                        @DateTimeOffset.FromUnixTimeSeconds(history.StartUnixTime)
                            .ToString("g", CultureInfo.CurrentCulture)
                    </span>
                </div>
            </div>
            <button class="delete-button" @onclick="() => OnDeleteSession.InvokeAsync(history.SessionId)">
                <CloseIcon />
            </button>
        </li>
    }
</ul>

@code {
    [Parameter]
    public List<ChatHistory> Histories { get; set; } = new();

    [Parameter]
    public EventCallback<string> OnSelectSession { get; set; }

    [Parameter]
    public EventCallback<string> OnDeleteSession { get; set; }

    [Parameter]
    public string CurrentSessionId { get; set; } = string.Empty;

    // Optional: Helper method for relative time display
    private string GetRelativeTime(long unixTime)
    {
        var time = DateTimeOffset.FromUnixTimeSeconds(unixTime);
        var span = DateTimeOffset.Now - time;
        
        if (span.TotalDays >= 30) return $"{(int)(span.TotalDays / 30)} month(s) ago";
        if (span.TotalDays >= 1) return $"{(int)span.TotalDays} day(s) ago";
        if (span.TotalHours >= 1) return $"{(int)span.TotalHours} hour(s) ago";
        if (span.TotalMinutes >= 1) return $"{(int)span.TotalMinutes} minute(s) ago";
        return "just now";
    }
}